@model KEKChat.Models.EditUserModel
@{
    ViewBag.Title = "EditUserView";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

@section CustomCss{
    <link href="~/Content/Chat.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/LoginForm.css" rel="stylesheet" type="text/css" />
}

@section PartialScript
{
    <script>
        var polling = false;

        $(document).ready(function () {
            var activeTab = $(".side-tab-left");
            var otherTab = $(".side-tab-right");

            activeTab.css("border-bottom", "0");
            otherTab.css("border-bottom", "2px solid");

            var activeContent = $(".people");
            var otherContent = $(".memes");

            activeContent.css("display", "block");
            otherContent.css("display", "none");

            activeTab.css("border-bottom", "none");
            console.log("ready");

            $(".side-tab").click(function (event) {
                if (this === otherTab.get(0)) {
                    activeContent.css("display", "none");
                    otherContent.css("display", "block");

                    var temp = activeTab;
                    activeTab = otherTab;
                    otherTab = temp;

                    activeTab.css({ "border-bottom": "0", "background-color": "#FFFD83" });
                    otherTab.css({ "border-bottom": "2px solid", "background-color": "#EFED73" });

                    var tempC = activeContent;
                    activeContent = otherContent;
                    otherContent = tempC;
                }
            }
            );

            loadInventory();
            loadPeople();

            window.setInterval(loadPeople, 5000);
        });

        function loadInventory() {
            $.ajax(
                {
                    url: "@Url.Action("GetInventory", "Home", new { view = "Dashboard" })",
                    type: 'GET',
                    dataType: 'html'
                }
            ).always(function (result) {
                        $(".memes").html(result);
            });
        }

        function loadPeople() {
            $.ajax(
                {
                    url: "@Url.Action("GetPeople", "Home")",
                    type: 'GET',
                    dataType: 'html'
                }
            ).always(function (result) {
                        $(".people").html(result);
            });
        }
    </script>
}

@section SideBar
{
    <div class="row tab-row m-0">
        <div class="col-6 p-0 m-0 text-center side-tab side-tab-left nav-link text-oceanblue" id="peopleList">
            People
        </div>
        <div class="col-6 p-0 m-0 text-center side-tab side-tab-right nav-link text-oceanblue">
            Memes
        </div>
    </div>
    <div class="row content-row m-0">
        <div class="people h-100">
        </div>
        <div class="memes h-100">
        </div>
    </div>
}

<div class="form-parent-div">
    <h3 class="login-title">Edit User</h3>
    <div class="login-div">
        @using (Html.BeginForm("UpdateUserInfo", "Administration", FormMethod.Post))
        {
            @Html.HiddenFor(model => model.UserID)
            @Html.LabelFor(model => model.Username)
            <br>
            @Html.EditorFor(model => model.Username)
            @Html.ValidationMessageFor(model => model.Username, null, new { @class = "text-error" })
            <hr>
            @Html.LabelFor(model => model.Currency)
            <br>
            @Html.EditorFor(model => model.Currency)
            <hr>
            @Html.LabelFor(model => model.Email)
            <br>
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email.EmailName, null, new { @class = "text-error" })
            <hr>
            @Html.LabelFor(model => model.Password)
            <br>
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-error" })
            <hr>
            @Html.LabelFor(model => model.ConfirmPassword)
            <br>
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "text-error" })
            <br>
            <button type="submit" class="login-button">Edit</button>
        }
    </div>
</div>


